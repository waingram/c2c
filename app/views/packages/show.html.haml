- model_class = Package
.page-header
  %h1=t '.title', :default => model_class.model_name.human

%p
  %strong= model_class.human_attribute_name(:title) + ':'
  %br
  = @package.title
%p
  %strong= model_class.human_attribute_name(:description) + ':'
  %br
  = @package.description

= link_to t("activerecord.attributes.package.items"), package_items_path(@package), :class => 'btn'

%form#fileupload{:action => package_items_path(@package), :enctype => "multipart/form-data", :method => "POST"}
  / The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload
  .row.fileupload-buttonbar
    .span7
      / The fileinput-button span is used to style the file input field as button
      %span.btn.btn-success.fileinput-button
        %i.icon-plus.icon-white
        %span Add files...
        %input{:multiple => "", :name => "item[file]", :type => "file"}
      %button.btn.btn-primary.start{:type => "submit"}
        %i.icon-upload.icon-white
        %span Start upload
      %button.btn.btn-warning.cancel{:type => "reset"}
        %i.icon-ban-circle.icon-white
        %span Cancel upload
      %button.btn.btn-danger.delete{:type => "button"}
        %i.icon-trash.icon-white
        %span Delete
      %input.toggle{:type => "checkbox"}
    .span5
      / The global progress bar
      .progress.progress-success.progress-striped.active.fade
        .bar{:style => "width:0%;"}
  / The loading indicator is shown during image processing
  .fileupload-loading
  %br
    / The table listing the files available for upload/download
    %table.table.table-striped
      %tbody.files{"data-target" => "#modal-gallery", "data-toggle" => "modal-gallery"}
/ modal-gallery is the modal dialog used for the image gallery
#modal-gallery.modal.modal-gallery.hide.fade
  .modal-header
    %a.close{"data-dismiss" => "modal"} Ã—
    %h3.modal-title
  .modal-body
    .modal-image
  .modal-footer
    %a.btn.modal-download{:target => "_blank"}
      %i.icon-download
      %span Download
    %a.btn.btn-success.modal-play.modal-slideshow{"data-slideshow" => "5000"}
      %i.icon-play.icon-white
      %span Slideshow
    %a.btn.btn-info.modal-prev
      %i.icon-arrow-left.icon-white
      %span Previous
    %a.btn.btn-primary.modal-next
      %span Next
      %i.icon-arrow-right.icon-white
/ The template to display files available for upload
%script#template-upload{:type => "text/x-tmpl"}
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  %tr.template-upload.fade
    %td.preview
      %span.fade
    %td.name
      %span {%=file.name%}
    %td.size
      %span {%=o.formatFileSize(file.size)%}
    {% if (file.error) { %}
    %td.error{:colspan => "2"}
      %span.label.label-important {%=locale.fileupload.error%}
      {%=locale.fileupload.errors[file.error] || file.error%}
    {% } else if (o.files.valid && !i) { %}
    %td
      .progress.progress-success.progress-striped.active
        .bar{:style => "width:0%;"}
    %td.start
      {% if (!o.options.autoUpload) { %}
      %button.btn.btn-primary
        %i.icon-upload.icon-white
        %span {%=locale.fileupload.start%}
      {% } %}
    {% } else { %}
    %td{:colspan => "2"}
    {% } %}
    %td.cancel
      {% if (!i) { %}
      %button.btn.btn-warning
        %i.icon-ban-circle.icon-white
        %span {%=locale.fileupload.cancel%}
      {% } %}
  {% } %}
/ The template to display files available for download
%script#template-download{:type => "text/x-tmpl"}
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  %tr.template-download.fade
    {% if (file.error) { %}
    %td
    %td.name
      %span {%=file.name%}
    %td.size
      %span {%=o.formatFileSize(file.size)%}
    %td.error{:colspan => "2"}
      %span.label.label-important {%=locale.fileupload.error%}
      {%=locale.fileupload.errors[file.error] || file.error%}
    {% } else { %}
    %td.preview
      {% if (file.thumbnail_url) { %}
      %a{:download => "{%=file.name%}", :href => "{%=file.url%}", :rel => "gallery", :title => "{%=file.name%}"}
        %img{:src => "{%=file.thumbnail_url%}"} {%=file.name%}
      {% } %}
    %td.name
      %a{:download => "{%=file.name%}", :href => "{%=file.url%}", :rel => "{%=file.thumbnail_url&&'gallery'%}", :title => "{%=file.file_file_name%}"} {%=file.file_file_name%}
    %td.size
      %span {%=o.formatFileSize(file.size)%}
    %td{:colspan => "2"}
    {% } %}
    %td.delete
      %button.btn.btn-danger{"data-type" => "{%=file.delete_type%}", "data-url" => "{%=file.delete_url%}"}
        %i.icon-trash.icon-white
        %span {%=locale.fileupload.destroy%}
      %input{:name => "delete", :type => "checkbox", :value => "1"}
  {% } %}
- content_for :more_javascript do
  / The jQuery UI widget factory, can be omitted if jQuery UI is already included
  = javascript_include_tag "jquery.ui.widget.js"
  / The Templates plugin is included to render the upload/download listings
  = javascript_include_tag "tmpl.min.js"
  / The Load Image plugin is included for the preview images and image resizing functionality
  = javascript_include_tag "load-image.min.js"
  / The Canvas to Blob plugin is included for image resizing functionality
  = javascript_include_tag "canvas-to-blob.min.js"
  / Bootstrap JS and Bootstrap Image Gallery are not required, but included for the demo
  = javascript_include_tag "bootstrap-image-gallery.min.js"
  / The Iframe Transport is required for browsers without support for XHR file uploads
  = javascript_include_tag "jquery.iframe-transport.js"
  / The basic File Upload plugin
  = javascript_include_tag "jquery.fileupload.js"
  / The File Upload image processing plugin
  = javascript_include_tag "jquery.fileupload-ip.js"
  / The File Upload user interface plugin
  = javascript_include_tag "jquery.fileupload-ui.js"
  / The localization script
  = javascript_include_tag "locale.js"
  / The main application script
  = javascript_include_tag 'main'
  / The XDomainRequest Transport is included for cross-domain file deletion for IE8+
  /[if gte IE 8] <script src="js/cors/jquery.xdr-transport.js"></script>
- content_for :more_css do
  = stylesheet_link_tag "style"
  = stylesheet_link_tag "jquery.fileupload-ui"

.form-actions
  = link_to t('.back', :default => t("helpers.links.back")), packages_path, :class => 'btn'
  = link_to t('.edit', :default => t("helpers.links.edit")), edit_package_path(@package), :class => 'btn'
  = link_to t('.destroy', :default => t("helpers.links.destroy")), package_path(@package), :method => "delete", :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')), :class => 'btn btn-danger'
